// In Datei BDDShowcaseStepDefinitions.java

package bddshowcasepackage;

import io.cucumber.java.de.Angenommen;
import io.cucumber.java.de.Wenn;
import io.cucumber.java.de.Dann;

import static org.junit.Assert.*;

public class BDDShowcaseStepDefinitions {

    Employee aEmployee;
    String aStartTime, aEndTime;

    @Angenommen("Ein Mitarbeiter ist im System erfasst und einem Projekt zugeordnet")
    public void ein_mitarbeiter_ist_im_system_erfasst_und_einem_projekt_zugeordnet() {

        aEmployee = new Employee("das beste Projekt", EmployeeType.MA);

    }
    @Wenn("der Mitarbeiter die Kommenzeit {string} und Gehenzeit {string} erfasst")
    public void der_mitarbeiter_die_kommenzeit_und_gehenzeit_erfasst(String startTime, String endTime) {

        aStartTime = startTime;
        aEndTime = endTime;

    }
    @Dann("berechnet das System korrekt die gesetzlich vorgeschriebene Ruhepause von {int} Minuten")
    public void berechnet_das_system_korrekt_die_gesetzlich_vorgeschriebene_ruhepause_von_minuten (Integer pauseTime) {

        assertEquals(pauseTime, aEmployee.getPauseTime(aStartTime, aEndTime), 0);
    }
}

// -----------------------------------------------

// In Datei Employee.java

package bddshowcasepackage;

import tddshowcasepackage.*;

enum EmployeeType {
    MA("tariflicher Mitarbeiter"),
    MALTD ("leitender Angestellter"),
    HR ("Human Ressourcen-Mitarbeiter"),
    PM ("Projektleiter"),
    FK ("FÃ¼hrungskraft");

    public final String label;

    private EmployeeType(String label) {
        this.label = label;
    }
}

public class Employee {

    private String projectName;
    private final EmployeeType employeeType;

    public Employee (String argProjectName, EmployeeType argEmployeeType) {
        projectName = argProjectName;
        employeeType = argEmployeeType;
    }

   public int getPauseTime(String startTime, String endTime) {

        double timeDifference = new TimePair().getTimeDifference(startTime, endTime);
        int pauseTime = 0;

        switch (employeeType) {
            case MALTD:
                pauseTime = 0;

            case MA:
                if (timeDifference <= 6.0) {
                    pauseTime = 0;
                } else if (timeDifference > 6.0 && timeDifference <= 6.5) {
                    pauseTime = (int) ((timeDifference - 6.0)*60);
                } else if (timeDifference > 6.5 && timeDifference <= 9.5) {
                    pauseTime = 30;
                } else if (timeDifference > 9.5 && timeDifference <= 9.75) {
                    pauseTime = (int) ((timeDifference - 9.0)*60);
                } else if (timeDifference > 9.75) {
                    pauseTime = 45;
                }
        }
        return pauseTime;
    }
}
